# Web Application for the control of a CDPR

## Description
This project consists of a web application that serves as a user interface to control a cable robot. The backend of the application is built using ROS (Robot Operating System) and communicates with the robot's hardware through a ModbusTCP/IP connection with a PLC (Programmable Logic Controller).

## Features
The web dashboard provides the following main features:

### 1. Home Interface
The home interface displays the status of the ROS-Web.App connection. It shows whether the connection is established, closed, or if there's an error.

### 2. Offline Control Mode
In this mode, users can control the robot's pulleys by setting the degrees of rotation. The changes are visualized using a 3D model in RViz.

### 3. Jogg Control Mode
- **Position Mode:** Control the pulleys' positions using a control panel.
- **Torque Mode:** Set pulleys' positions with torque control. 
- **Feedback Section:** Receive feedback from the PLC for both torque and position modes.

### 4. Online Control Mode
- **Dimensions Settings:** Set dimensions for the robot chassis and/or the mobile platform.
- **Linear Movement:** Command the mobile platform for linear movement.
- **Circular Movement:** Command the mobile platform to move in a circular path.

## Installation
1. Download the project's .zip file.
2. Extract the contents.
3. Install PyModbus by typing this command:
pip install -U pymodbus
(For more information visit: https://pymodbus.readthedocs.io/en/latest/readme.html)
4. Source your ROS workspace following the commands below:
i. cd ros_ws
ii. source devel/setup.bash
iii. catkin_make

## Usage 
1. Start the web application: index.html.
2. Launch rosbridge, to establish the connection between the ros system and the web application, by typing this command:
roslaunch rosbridge_server rosbridge_websocket.launch
3. Navigate through the different control modes to interact with the robot:

### 1. Offline Mode: 
i. Launch the urdf model on rviz by typing the following command: 
roslaunch cablerobot_test_urdf display.launch

### 2. Jogg Mode: 
i. Launch the urdf pulleys model by typing the following command:
rosrun cablerobot display.launch
ii. Establish the ModbusTCP/IP connection by the command below:
iii. Run the modbus node as follows:
rosrun my_package modbus_node.py

### 3. Online Mode: 
i. For the cartesian motion type the following command:
roslaunch my_package ik_online.launch
ii. For the circular motion type the following command:
roslaunch my_package cir_online.launch


## Dependencies
- ROS Noetic (Robot Operating System)
- PyModbus package
- ROSLIB package (Already existing in the workspace)

## Acknowledgments
This project was made possible with the help of various resources and communities:

- ROS Wiki (https://wiki.ros.org/) for valuable documentation and tutorials on ROS.
- ChatGPT (https://openai.com) for providing assistance and guidance during the development process.
- GitHub (https://github.com/) for version control and collaborative development.
- W3Schools (https://www.w3schools.com/) for web development references.
